# -*- coding: utf-8 -*-
"""fruitdata train.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15F_iHhQ3ZHgD8GkYyvF9QSe9K0wh3YVY
"""

from google.colab import drive
drive.mount('/content/drive')

from keras.models import Sequential
from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense
from keras.preprocessing.image import ImageDataGenerator
from keras.layers import Dropout

model = Sequential()

model.add(Conv2D(16, (3, 3), input_shape = (512,512, 3), activation = 'relu'))
model.add(MaxPooling2D(pool_size = (2, 2)))

model.add(Conv2D(32, (3, 3), activation = 'relu'))
model.add(MaxPooling2D(pool_size = (2, 2)))

model.add(Conv2D(64, (3, 3), activation = 'relu'))
model.add(MaxPooling2D(pool_size = (2, 2)))

model.add(Conv2D(128, (3, 3), activation = 'relu'))
model.add(MaxPooling2D(pool_size = (2, 2)))

model.add(Conv2D(256, (3, 3), activation = 'relu'))
model.add(MaxPooling2D(pool_size = (2, 2)))

model.add(Conv2D(512, (3, 3), activation = 'relu'))
model.add(MaxPooling2D(pool_size = (2, 2)))

model.add(Flatten())

model.summary()

model.add(Dense(units = 128, activation = 'relu'))
model.add(Dense(units = 1, activation = 'sigmoid'))

model.compile(optimizer ='adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

train_datagen = ImageDataGenerator(rescale = 1./255,
                                   shear_range = 0.2,
                                   zoom_range = 0.2,
                                   horizontal_flip = True)

val_datagen = ImageDataGenerator(rescale = 1./255)

training_set = train_datagen.flow_from_directory('/content/drive/MyDrive/LEAF DISEASE/data/train',
                                                 target_size = (512,512),
                                                 batch_size = 8,
                                                 class_mode = 'binary')

val_set = val_datagen.flow_from_directory('/content/drive/MyDrive/LEAF DISEASE/data/val',
                                            target_size = (512,512),
                                            batch_size = 8,
                                            class_mode = 'binary')

model.fit(training_set,
                         steps_per_epoch = 116,
                         epochs = 100,
                         validation_data = val_set,
                         validation_steps = 45)

model_json = model.to_json()
with open("model.json", "w") as json_file:
    json_file.write(model_json)
model.save_weights("model.h5")
print("Saved model to disk")

model.save('model.h5')

import numpy as np
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image

model=load_model('model.h5')

img=image.load_img(r"/content/drive/MyDrive/LEAF DISEASE/data/train/Corn Healthy/Healthy_10.jpg")

img

x=image.img_to_array(img)

x

x=np.expand_dims(x,axis=0)

x

training_set.class_indices